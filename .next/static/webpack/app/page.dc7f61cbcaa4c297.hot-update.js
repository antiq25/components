"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/authenticate/ApiCalls.ts":
/*!**************************************!*\
  !*** ./src/authenticate/ApiCalls.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateMessage: function() { return /* binding */ generateMessage; },\n/* harmony export */   handleFetchProfile: function() { return /* binding */ handleFetchProfile; },\n/* harmony export */   handleForgotPassword: function() { return /* binding */ handleForgotPassword; },\n/* harmony export */   handleResetPassword: function() { return /* binding */ handleResetPassword; },\n/* harmony export */   handleUpdateProfile: function() { return /* binding */ handleUpdateProfile; },\n/* harmony export */   handleVerifyEmail: function() { return /* binding */ handleVerifyEmail; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   showErrorMessage: function() { return /* binding */ showErrorMessage; },\n/* harmony export */   showSuccessMessage: function() { return /* binding */ showSuccessMessage; },\n/* harmony export */   signUp: function() { return /* binding */ signUp; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/../node_modules/axios/lib/axios.js\");\n\nconst errorInterceptor = (config)=>{\n    return config;\n};\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"https://localhost:4443/api/v1\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n});\napiClient.interceptors.request.use(errorInterceptor, (error)=>{\n    console.error(\"Error in request interceptor:\", error);\n    return Promise.reject(error);\n});\n// **************************//**************************\n//                        API CALL \n// **** **********************//*************************\nconst apiCall = async (type, call, successMessage, errorMessagePrefix)=>{\n    try {\n        const response = await call();\n        showSuccessMessage(type, successMessage);\n        return {\n            success: true,\n            data: response.data\n        };\n    } catch (error) {\n        var _error_response_data, _error_response;\n        const errorMessage = ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || errorMessagePrefix;\n        showErrorMessage(type, \"\".concat(errorMessagePrefix, \": \").concat(errorMessage));\n        return {\n            success: false,\n            error: errorMessage\n        };\n    }\n};\n// **************************//**************************\n//                      START AUTH CALLS\n// **** **********************//*************************\nconst signUp = async (signupData)=>apiCall(\"signUp\", ()=>apiClient.post(\"/auth/signup\", signupData), \"Signup successful\", \"Signup failed\");\nconst login = async (signinData)=>apiCall(\"login\", ()=>apiClient.post(\"/auth/login\", signinData), \"Login successful\", \"Login failed\");\nconst handleVerifyEmail = async (token, verificationCode)=>apiCall(\"verifyEmail\", ()=>apiClient.get(\"/auth/verify?code=\".concat(verificationCode), {\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        }), \"Email verified\", \"Email verification failed\");\n// **************************//**************************\n//                      START PROFILE CALLS            \n// **** **********************//*************************\nconst handleFetchProfile = async (token)=>apiCall(\"fetchProfile\", ()=>apiClient.get(\"/profile/fetch\", {\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        }), \"Profile fetched\", \"Fetching profile failed\");\nconst handleUpdateProfile = async (token, firstName, lastName)=>apiCall(\"updateProfile\", ()=>apiClient.put(\"/profile/update\", {\n            firstName,\n            lastName\n        }, {\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            }\n        }), \"Profile updated\", \"Updating profile failed\");\n// **************************//**************************\n//                      START RECOVERY CALLS\n// **** **********************//*************************\nconst handleForgotPassword = async (email)=>apiCall(\"forgotPassword\", ()=>apiClient.post(\"/recovery/forgot-password\", {\n            email\n        }), \"Forgot password email sent\", \"Forgot password failed\");\nconst handleResetPassword = async (code, password)=>apiCall(\"resetPassword\", ()=>apiClient.post(\"/recovery/reset-password\", {\n            password,\n            code\n        }), \"Password reset successful\", \"Password reset failed\");\n// **************************//**************************\n//                      ERROR HELPERS\n// **** **********************//*************************\nconst showSuccessMessage = (type, message)=>console.log(generateMessage(\"success\", type, message));\n// const showWarningMessage = (type: string, message: string) => console.log(generateMessage('warning', type, message)); \nconst showErrorMessage = (type, message)=>console.log(generateMessage(\"error\", type, message));\nconst generateMessage = (messageType, type, message)=>\"[\".concat(messageType.toUpperCase(), \"] \").concat(type, \": \").concat(message); // **************************//**************************\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/authenticate/ApiCalls.ts\n"));

/***/ })

});